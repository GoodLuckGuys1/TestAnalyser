<?xml version="1.0" encoding="utf-8" ?>
<ContentView
    x:Class="TestAnalyserMaui.Views.EventCalendarExamplePage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:viewModels="clr-namespace:TestAnalyserMaui.ViewModels"
    xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:xc="clr-namespace:XCalendar.Maui.Views;assembly=XCalendar.Maui"
    xmlns:xcConverters="clr-namespace:XCalendar.Maui.Converters;assembly=XCalendar.Maui"
    xmlns:models="clr-namespace:TestAnalyserMaui.Models"
    x:Name="This"
    x:DataType="{x:Type viewModels:EventCalendarExampleViewModel}">
	<ContentView.BindingContext>
		<viewModels:EventCalendarExampleViewModel />
	</ContentView.BindingContext>
	<ContentView.Resources>
		<!--  Limits a string to a certain amount of characters  -->
		<xcConverters:StringCharLimitConverter x:Key="StringCharLimitConverter"/>
		<!--  Returns true if all bindings evaluate to true  -->
		<mct:VariableMultiValueConverter x:Key="AllTrueConverter" ConditionType="All"/>
		<!--  Inverts a binded boolean value  -->
		<mct:InvertedBoolConverter x:Key="InvertedBoolConverter"/>
		<Style x:Key="DefaultCalendarViewStyle" TargetType="{x:Type xc:DayView}">
			<Setter Property="CurrentMonthTextColor" Value="{StaticResource CalendarBackgroundTextColor}"/>
			<Setter Property="TodayTextColor" Value="{StaticResource CalendarPrimaryColor}"/>
			<Setter Property="InvalidTextColor" Value="{StaticResource CalendarTertiaryColor}"/>
			<Setter Property="SelectedBackgroundColor" Value="{StaticResource CalendarPrimaryColor}"/>
			<Setter Property="SelectedTextColor" Value="{StaticResource CalendarPrimaryTextColor}"/>
		</Style>
	</ContentView.Resources>

	<Grid ColumnSpacing="0" RowSpacing="0">

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>

		<Frame
            Grid.Row="0"
            Grid.Column="0"
            Margin="10"
            Padding="10"
            BackgroundColor="{StaticResource ContentBackgroundColor}"
            CornerRadius="15">

			<xc:CalendarView
                x:Name="MainCalendarView"
                BackwardsArrowCommand="{Binding NavigateCalendarCommand}"
                BackwardsArrowCommandParameter="{Binding EventCalendar.BackwardsNavigationAmount}"
                Days="{Binding EventCalendar.Days}"
                DaysOfWeek="{Binding EventCalendar.DayNamesOrder}"
                ForwardsArrowCommand="{Binding NavigateCalendarCommand}"
                ForwardsArrowCommandParameter="{Binding EventCalendar.ForwardsNavigationAmount}"
                NavigatedDate="{Binding EventCalendar.NavigatedDate}"
                Style="{StaticResource DefaultCalendarViewStyle}">

				<xc:CalendarView.NavigationViewTemplate>
					<ControlTemplate>
						<xc:NavigationView
                            ArrowColor="{StaticResource ContentTextColor}"
                            BackgroundColor="Transparent"
                            BackwardsArrowCommand="{Binding BackwardsArrowCommand, Source={RelativeSource TemplatedParent}}"
                            BackwardsArrowCommandParameter="{Binding BackwardsArrowCommandParameter, Source={RelativeSource TemplatedParent}}"
                            ForwardsArrowCommand="{Binding ForwardsArrowCommand, Source={RelativeSource TemplatedParent}}"
                            ForwardsArrowCommandParameter="{Binding ForwardsArrowCommandParameter, Source={RelativeSource TemplatedParent}}"
                            HeightRequest="40"
                            Style="{StaticResource DefaultNavigationViewStyle}"
                            Text="{Binding Text, Source={RelativeSource TemplatedParent}}"
                            TextColor="{StaticResource ContentTextColor}"/>
					</ControlTemplate>
				</xc:CalendarView.NavigationViewTemplate>

				<xc:CalendarView.DayTemplate>
					<DataTemplate x:DataType="{x:Type models:EventDay}">
						<!--  ContentView so that the margin is respected by the DaysView  -->
						<ContentView>
							<Frame
                                Margin="2.5"
                                Padding="0"
                                CornerRadius="100"
                                HasShadow="False">
								<xc:DayView
                                    CurrentMonthCommand="{Binding BindingContext.ChangeDateSelectionCommand, Source={x:Reference This}}"
                                    CurrentMonthCommandParameter="{Binding DateTime}"
                                    DateTime="{Binding DateTime}"
                                    HeightRequest="41"
                                    IsCurrentMonth="{Binding IsCurrentMonth}"
                                    IsInvalid="{Binding IsInvalid}"
                                    IsSelected="{Binding IsSelected}"
                                    IsToday="{Binding IsToday}"
                                    SelectedCommand="{Binding BindingContext.ChangeDateSelectionCommand, Source={x:Reference This}}"
                                    SelectedCommandParameter="{Binding DateTime}"
                                    Style="{StaticResource DefaultDayViewStyle}"
                                    TodayCommand="{Binding BindingContext.ChangeDateSelectionCommand, Source={x:Reference This}}"
                                    TodayCommandParameter="{Binding DateTime}">

									<xc:DayView.ControlTemplate>
										<ControlTemplate>
											<!--  Using a Grid to stack views on the z axis  -->
											<!--  TemplatedParent refers to the view that the ControlTemplate resides in  -->
											<Grid BindingContext="{Binding BindingContext, Source={RelativeSource TemplatedParent}}" RowSpacing="2">

												<Grid.RowDefinitions>
													<RowDefinition Height="1.5*"/>
													<RowDefinition Height="*"/>
												</Grid.RowDefinitions>

												<!--  ContentPresenter displays the default content for the control  -->
												<ContentPresenter
                                                    Grid.Row="0"
                                                    Grid.RowSpan="2"
                                                    VerticalOptions="Center"/>

												<!--  TemplatedParent refers to the view that the ControlTemplate resides in  -->
												<StackLayout
                                                    Grid.Row="1"
                                                    BindableLayout.ItemsSource="{Binding Events}"
                                                    HorizontalOptions="Center"
                                                    Orientation="Horizontal"
                                                    Spacing="2.5">

													<!--  I want the event indicators to only be visible when the DateTime is in the currently navigated month  -->
													<StackLayout.IsVisible>
														<MultiBinding Converter="{StaticResource AllTrueConverter}">
															<Binding Path="IsCurrentMonth"/>
															<Binding Converter="{StaticResource InvertedBoolConverter}" Path="IsInvalid"/>
														</MultiBinding>
													</StackLayout.IsVisible>

													<BindableLayout.ItemTemplate>
														<DataTemplate x:DataType="{x:Type models:Event}">
															<BoxView
                                                                CornerRadius="100"
                                                                HeightRequest="7"
                                                                HorizontalOptions="CenterAndExpand"
                                                                VerticalOptions="Center"
                                                                WidthRequest="7"
                                                                Color="{Binding Color}"/>
														</DataTemplate>
													</BindableLayout.ItemTemplate>

												</StackLayout>

											</Grid>
										</ControlTemplate>
									</xc:DayView.ControlTemplate>

								</xc:DayView>
							</Frame>
						</ContentView>
					</DataTemplate>
				</xc:CalendarView.DayTemplate>

			</xc:CalendarView>

		</Frame>

		<CollectionView
            Grid.Row="1"
            Grid.Column="0"
            ItemsSource="{Binding SelectedEvents}">

			<CollectionView.EmptyView>
				<Label
                    FontAttributes="Bold"
                    FontSize="20"
                    HorizontalTextAlignment="Center"
                    Text="No Events"
                    TextColor="{StaticResource ContentTextColor}"
                    VerticalTextAlignment="Center"/>
			</CollectionView.EmptyView>

			<CollectionView.ItemsLayout>
				<GridItemsLayout Orientation="Vertical" Span="1"/>
			</CollectionView.ItemsLayout>

			<CollectionView.ItemTemplate>
				<DataTemplate x:DataType="{x:Type models:Event}">
					<ContentView>
						<Frame
                            Margin="5"
                            Padding="0"
                            CornerRadius="10">
							<Grid>

								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="20"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>

								<BoxView Grid.Column="0" BackgroundColor="{Binding Color}"/>

								<StackLayout
                                    Grid.Column="1"
                                    Padding="10"
                                    BackgroundColor="{StaticResource ContentBackgroundColor}"
                                    Spacing="0">
									<Label
                                        FontAttributes="Bold"
                                        FontSize="20"
                                        Text="{Binding DateTime, StringFormat='{0: dd MMMM HH:mm}'}"
                                        TextColor="{StaticResource ContentTextColor}"
                                        VerticalTextAlignment="Center"/>
									<Label
                                        Margin="5,0,0,0"
                                        FontSize="16"
                                        Text="{Binding Title}"
                                        TextColor="{StaticResource ContentTextColor}"/>
									<Label
                                        Margin="5,10,0,0"
                                        FontSize="14"
                                        Text="{Binding Description}"
                                        TextColor="{StaticResource ContentTextColor}"/>
								</StackLayout>
							</Grid>
						</Frame>
					</ContentView>
				</DataTemplate>
			</CollectionView.ItemTemplate>
		</CollectionView>

	</Grid>

</ContentView>